<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.formation</groupId>
    <artifactId>ejb-client</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
    		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    		<!-- JBoss dependency versions -->
    		<version.wildfly>8.1.0.Final</version.wildfly>
    		<version.jboss.spec.javaee.7.0>1.0.0.Final</version.jboss.spec.javaee.7.0>

    		<!-- other plugin versions -->
    		<version.compiler.plugin>3.1</version.compiler.plugin>
    		<version.exec.plugin>1.2.1</version.exec.plugin>

    		<!-- maven-compiler-plugin -->
    		<maven.compiler.target>8</maven.compiler.target>
    		<maven.compiler.source>8</maven.compiler.source>
    	</properties>

    	<dependencyManagement>
    		<dependencies>
    			<dependency>
    				<groupId>org.jboss.spec</groupId>
    				<artifactId>jboss-javaee-7.0</artifactId>
    				<version>${version.jboss.spec.javaee.7.0}</version>
    				<type>pom</type>
    				<scope>import</scope>
    			</dependency>
    			<dependency>
    				<groupId>org.wildfly</groupId>
    				<artifactId>wildfly-ejb-client-bom</artifactId>
    				<version>${version.wildfly}</version>
    				<type>pom</type>
    				<scope>import</scope>
    			</dependency>
    		</dependencies>
    	</dependencyManagement>

    	<dependencies>

    		<!-- Business Interfaces of the server EJB. -->
    		<dependency>
    			<groupId>fr.formation</groupId>
    			<artifactId>ejb-remote</artifactId>
    			<type>ejb</type>
    			<version>${project.version}</version>
    		</dependency>

    		<!-- Import the transaction spec API, we use runtime scope because we aren't
    			using any direct reference to the spec API in our client code -->
    		<dependency>
    			<groupId>org.jboss.spec.javax.transaction</groupId>
    			<artifactId>jboss-transaction-api_1.2_spec</artifactId>
    			<scope>runtime</scope>
    		</dependency>

    		<!-- Import the EJB 3.1 API, we use runtime scope because we aren't using
    			any direct reference to EJB spec API in our client code -->
    		<dependency>
    			<groupId>org.jboss.spec.javax.ejb</groupId>
    			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
    			<scope>runtime</scope>
    		</dependency>

    		<!-- JBoss EJB client API jar. We use runtime scope because the EJB client
    			API isn't directly used in this example. We just need it in our runtime classpath -->
    		<dependency>
    			<groupId>org.jboss</groupId>
    			<artifactId>jboss-ejb-client</artifactId>
    			<scope>runtime</scope>
    		</dependency>

    		<!-- client communications with the server use XNIO -->
    		<dependency>
    			<groupId>org.jboss.xnio</groupId>
    			<artifactId>xnio-api</artifactId>
    			<scope>runtime</scope>
    		</dependency>
    		<dependency>
    			<groupId>org.jboss.xnio</groupId>
    			<artifactId>xnio-nio</artifactId>
    			<scope>runtime</scope>
    		</dependency>

    		<!-- The client needs JBoss remoting to access the server -->
    		<dependency>
    			<groupId>org.jboss.remoting</groupId>
    			<artifactId>jboss-remoting</artifactId>
    			<scope>runtime</scope>
    		</dependency>
    		<dependency>
    			<groupId>org.jboss</groupId>
    			<artifactId>jboss-remote-naming</artifactId>
    			<scope>runtime</scope>
    		</dependency>

    		<!-- Remote EJB accesses can be secured -->
    		<dependency>
    			<groupId>org.jboss.sasl</groupId>
    			<artifactId>jboss-sasl</artifactId>
    			<scope>runtime</scope>
    		</dependency>

    		<!-- data serialization for invoking remote EJBs -->
    		<dependency>
    			<groupId>org.jboss.marshalling</groupId>
    			<artifactId>jboss-marshalling-river</artifactId>
    			<scope>runtime</scope>
    		</dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>2.12.1</version>
    </dependency>




    	</dependencies>

    	<build>
    		<finalName>${project.artifactId}</finalName>
    		<plugins>
    			<plugin>
    				<artifactId>maven-compiler-plugin</artifactId>
    				<version>${version.compiler.plugin}</version>
    				<configuration>
    					<source>${maven.compiler.source}</source>
    					<target>${maven.compiler.target}</target>
    				</configuration>
    			</plugin>
    			<plugin>
    				<groupId>org.codehaus.mojo</groupId>
    				<artifactId>exec-maven-plugin</artifactId>
    				<version>${version.exec.plugin}</version>
    				<configuration>
    					<mainClass>Manager</mainClass>
    				</configuration>
    			</plugin>

    		<plugin>
                 <artifactId>maven-assembly-plugin</artifactId>
                    <configuration>
                        <archive>
                          <manifest>
                             <mainClass>Manager</mainClass>
                          </manifest>
                        </archive>
                        <descriptorRefs>
                           <descriptorRef>jar-with-dependencies</descriptorRef>
                         </descriptorRefs>
                    </configuration>
            </plugin>

    		</plugins>


    	</build>

</project>